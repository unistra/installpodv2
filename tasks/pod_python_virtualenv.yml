- name: install python & co
  become: yes
  become_method: sudo
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - "{{ pythonv }}"
    - "python3-pip"
    - "{{ pythonv }}-dev"
    - python-setuptools
    - git
    - curl

- name: Install virtualenvwrapper
  command: pip3 install virtualenvwrapper
  become: yes
  become_method: sudo


- name: Install wget for migration
  command: pip3 install wget
  become: yes
  become_method: sudo


- name: Custom bashrc
  become: yes
  blockinfile:
    path:  "/home/{{ user }}/.bashrc"
    content: |
      export WORKON_HOME={{ venv_path }}
      export VIRTUALENVWRAPPER_PYTHON=/usr/bin/{{ pythonv }}
      source /usr/local/bin/virtualenvwrapper.sh


- name: source  "/home/{{ user }}/.bashrc"
  become: yes
  become_user: "{{ user }}"
  shell: . "/home/{{ user }}/.bashrc"

- name: Make virtualenv
  become: yes
  become_user: "{{ user }}"
  shell: ". /usr/local/bin/virtualenvwrapper.sh && mkvirtualenv --system-site-packages --python=/usr/bin/{{ pythonv }} {{ venv }}"
  args:
    executable: /bin/bash
    creates: "{{ venv_path }}/{{ venv }}"
  environment:
    WORKON_HOME: "{{venv_path}}"
    VIRTUALENVWRAPPER_PYTHON: /usr/bin/{{ pythonv }}


- name: create working repositories virtual nv, django path and media path
  become: yes
  become_method: sudo
  file:
    path: "{{item}}"
    recurse: yes
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 0766
    state: directory
  with_items: ["{{ venv_path }}", "{{ django_path }}", "{{ media_path }}"]

- name:  create unique symlinks
  become: yes
  become_method: sudo
  file:
    src: "{{ django_path }}"
    dest: "/home/{{ user }}/django_projects"
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 0766
    state: link














