# the upstream component nginx needs to connect to
upstream django {
    server unix://{{ django_path }}/uwsgi/podv2.sock ;
}


server {
    listen 80;
    server_name {{ pod_host }} {{ pod_host_alias | default('') }};

    location /status {
        return 200;
    }

    location / {
        return 301 https://$server_name$request_uri;
    }
}

{% if handle_redirection == true  %}

server {

    listen 80;
    server_name {{ host_redirect }};
    return 301 $scheme://{{ pod_host }}$request_uri;
}

server {
    listen      443;
    server_name  {{ host_redirect }};
    return 301 $scheme://{{ pod_host }}$request_uri;
    charset     utf-8;

    ssl                  on;
    ssl_certificate      /etc/ssl/certs/{{ ssl_certificate }};
    ssl_certificate_key  /etc/ssl/private/{{ ssl_certificate_key }};

}



{% endif %}

# configuration of the server
server {
    listen      443;
    server_name {{ pod_host }} {{ pod_host_alias }};
    charset     utf-8;

    ssl                  on;
    ssl_certificate      /etc/ssl/certs/{{ ssl_certificate }};
    ssl_certificate_key  /etc/ssl/private/{{ ssl_certificate_key }};
    # TLS hardening
    ssl_dhparam /etc/pki/tls/certs/dhparam.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_session_timeout 60m;
    #
    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;
    #
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    #



    # max upload size
    client_max_body_size 4G;
    # Allow to download large files
    uwsgi_max_temp_file_size 0;


    # Django media
    location /media  {
        alias {{ media_path }};
    }

    location /static {
        alias {{ django_path }}/pod/static; # your Django project's static files - amend as required
    }

{% if install_ftp == true  %}

    location /records {
        alias {{ ftp_path }}/;
    }

{% endif %}

    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  django;
        include     {{ django_path }}/uwsgi_params;
    }
}
