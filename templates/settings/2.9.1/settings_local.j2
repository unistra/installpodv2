from django.conf import settings
from django.utils.translation import ugettext_lazy as _


SECRET_KEY = '{{ settings_secret_key }}'

DEBUG = {{ settings_debug }}

{% if install_ssl == true  %}

SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
SECURE_SSL_REDIRECT = True

{% endif %}


ALLOWED_HOSTS = ['{{ pod_host }}','{{ pod_host_ip }}']

SESSION_COOKIE_AGE = 14400

SESSION_EXPIRE_AT_BROWSER_CLOSE = True

ADMINS = {{ settings_admins }}

MANAGERS = ADMINS

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': '{{ hostvars[groups['dbservers'][0]].postgresql_databases[0].name}}',
        'USER': '{{ hostvars[groups['dbservers'][0]].postgresql_users[0].name}}',
        'PASSWORD': '{{ hostvars[groups['dbservers'][0]].postgresql_users[0].password}}',
        'HOST': '{{ hostvars[groups['dbservers'][0]].inventory_hostname}}',
        'PORT': '5432',
    }
}

LANGUAGE_CODE = "fr"

LANGUAGES = (
    ('fr', 'Français'), ('en', 'English')
)


TIME_ZONE = 'Europe/Paris'

FILE_UPLOAD_TEMP_DIR = "{{ file_upload_temp_dir }}"

MEDIA_ROOT = '{{ media_path }}'


EMAIL_HOST = '{{ settings_smtp_host }}'
EMAIL_PORT = 25
DEFAULT_FROM_EMAIL = '{{ settings_smtp_default_email }}'
SERVER_EMAIL = '{{ settings_smtp_default_email }}'


MENUBAR_HIDE_INACTIVE_OWNERS = True

MENUBAR_SHOW_STAFF_OWNERS_ONLY = True

HOMEPAGE_SHOWS_PASSWORDED = False

HOMEPAGE_SHOWS_RESTRICTED = False

FORCE_LOWERCASE_TAGS = True

MAX_TAG_LENGTH = 50

USE_PODFILE = {{ settings_use_podfile }}

THIRD_PARTY_APPS = ['live', 'enrichment', ]

FILES_DIR = "files"

SUBJECT_CHOICES = (
    ('', '-----'),
    ('info', ('Request more information')),
    ('contribute', ('Learn more about how to contribute')),
    ('request_password', ('Password request for a video')),
    ('inappropriate_content', ('Report inappropriate content')),
    ('bug', ('Correction or bug report')),
    ('other', ('Other (please specify)'))
)

HIDE_USERNAME = False

HIDE_USER_TAB = False

HIDE_USER_FILTER = False

LINK_SUPERPOSITION = False

CUSTOM_CONTACT_US = True

USER_CONTACT_EMAIL_CASE = ['request_password']

USE_ESTABLISHMENT_FIELD	= False

USE_STATS_VIEW = True

VIEW_STATS_AUTH = True

MAX_DURATION_DATE_DELETE = 10

USE_CHUNKED_UPLOAD = True

CHUNK_SIZE = 1000000

HIDE_LOCAL_LOGIN = False

SHOW_ONLY_PARENT_THEMES = False

ORGANIZE_BY_THEME = False

HIDE_TYPES = False

USE_OPENCAST_STUDIO = False

{% if install_custom == true  %}

TEMPLATES = [{
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['{{ django_path }}/{{ custom_path }}/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
                'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'pod.main.context_processors.context_settings',
                'pod.main.context_processors.context_navbar',

                                      ],
                  },
             },
            ]


TEMPLATE_VISIBLE_SETTINGS = {

    'TITLE_SITE': '{{ custom_title }}',
    'TITLE_ETB': 'Université de Strasbourg',
    'DESC_SITE': 'L’objectif d’Esup-Pod est de faciliter la mise à disposition de vidéos et ainsi d’encourager son utilisation dans l’enseignement et la recherche.',
    'LOGO_SITE': 'img/uds-logo.png',
    'LOGO_ETB': 'img/uds-logo.png',
    'LOGO_PLAYER': 'img/uds.png',
    'FOOTER_TEXT': ('',),
    'FAVICON': 'img/logoPod.svg',
    'LINK_PLAYER': 'https://unistra.fr',
    'CSS_OVERRIDE': 'css/unistrapod.css',
    'PRE_HEADER_TEMPLATE': '',
    'POST_FOOTER_TEMPLATE' : '',
    'TRACKING_TEMPLATE' : '',
}


{% endif %}

TITLE_ETB = 'Université de Strasbourg'

# Configuration application recherche
# Pour mettre à jour le moteur de recherche, je lance toutes les nuits la tache cron suivante :
#    0 5 * * * cd /home/pod/django_projects/podv2 && /home/pod/.virtualenvs/django_pod/bin/python manage.py index_videos --all

ES_URL = ['http://pod-test-elasticsearch-1.srv.unistra.fr:9200/']
ES_INDEX = "pod"

# Valeur timeout pour configuration de ElasticSearch
ES_TIMEOUT = 30

# Valeur max essai pour configuration de ElasticSearch

ES_MAX_RETRIES = 10

# Valeur la version d'ElasticSearch
# valeurs possibles 6 ou 7 (pour indiquer utiliser elasticsearch 6 ou 7)
# pour utiliser la version 7, faire une mise à jour du paquet elasticsearch-py
# elasticsearch==7.10.1
# https://elasticsearch-py.readthedocs.io/en/v7.10.1/
ES_VERSION = 7 # Si 7, faire un une mise à jour du paquet




FFMPEG = '/usr/bin/ffmpeg'
FFPROBE = '/usr/bin/ffprobe'

SEGMENT_TARGET_DURATION = 2

RATE_MONITOR_BUFFER_RATIO = 2

FFMPEG_NB_THREADS = 0

GET_INFO_VIDEO = "%(ffprobe)s -v quiet -show_format -show_streams -select_streams v:0 -print_format json -i %(source)s"

GET_INFO_AUDIO = "%(ffprobe)s -v quiet -show_format -show_streams -select_streams a:0 -print_format json -i %(source)s"

FFMPEG_STATIC_PARAMS = " -c:a aac -ar 48000 -c:v h264 -profile:v high -pix_fmt yuv420p -crf 20 -sc_threshold 0 -force_key_frames \"expr:gte(t,n_forced*1)\" -deinterlace -threads %(nb_threads)s "

FFMPEG_MISC_PARAMS = " -hide_banner -y "
# to use in GPU, specify for example
# -y -vsync 0 -hwaccel_device {hwaccel_device} \
# -hwaccel cuvid -c:v {codec}_cuvid

FFMPEG_SCALE = ' -vf "scale=-2:{height}" '
# to use in GPU, specify ' -vf "scale_npp=-2:{height}:interp_algo=super" '

AUDIO_BITRATE = "192k"

ENCODING_M4A = "%(ffmpeg)s -i %(source)s %(misc_params)s -c:a aac -b:a %(audio_bitrate)s -vn -threads %(nb_threads)s \"%(output_dir)s/audio_%(audio_bitrate)s.m4a\""

ENCODE_MP3_CMD = "%(ffmpeg)s -i %(source)s %(misc_params)s -vn -b:a %(audio_bitrate)s -vn -f mp3 -threads %(nb_threads)s \"%(output_dir)s/audio_%(audio_bitrate)s.mp3\""

EMAIL_ON_ENCODING_COMPLETION = True

DEFAULT_DC_COVERAGE = TITLE_ETB + " - Town - Country"

DEFAULT_DC_RIGHTS = "BY-NC-SA"

USE_TRANSCRIPTION = False

DS_PARAM = {}

RESTRICT_EDIT_VIDEO_ACCESS_TO_STAFF_ONLY = {{ restrict_edit_video }}


# Encodage possible sur la plateforme. Associé à un rendu dans le cas d'une vidéo.
ENCODING_CHOICES = (
    ("audio", "audio"),
    ("360p", "360p"),
    ("480p", "480p"),
    ("720p", "720p"),
    ("1080p", "1080p"),
    ("playlist", "playlist")
)

# Format d'encodage réalisé sur la plateforme.
FORMAT_CHOICES = (
    ("video/mp4", 'video/mp4'),
    ("video/mp2t", 'video/mp2t'),
    ("video/webm", 'video/webm'),
    ("audio/mp3", "audio/mp3"),
    ("audio/wav", "audio/wav"),
    ("application/x-mpegURL", "application/x-mpegURL"),
)

LICENCE_CHOICES = (
    ('by', ("Attribution 4.0 International (CC BY 4.0)")),
    ('by-nd', ("Attribution-NoDerivatives 4.0 " "International (CC BY-ND 4.0)" )),
    ('by-nc-nd', ( "Attribution-NonCommercial-NoDerivatives 4.0 " "International (CC BY-NC-ND 4.0)" )),
    ('by-nc', ("Attribution-NonCommercial 4.0 " "International (CC BY-NC 4.0)")),
    ('by-nc-sa', ( "Attribution-NonCommercial-ShareAlike 4.0 " "International (CC BY-NC-SA 4.0)" )),
    ('by-sa', ( "Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)"))
)

DEFAULT_TYPE_ID = 1

CURSUS_CODES = (
    ('0', ("Autres / Other")),
    ('C', ("Conférence")),
    ('D', ("Diplôme universitaire")),
    ('1', ("Licence 1ère année")),
    ("2", ("Licence 2ème année")),
    ("3", ("Licence 3ème année")),
    ("4", ("Master 1ère année")),
    ("5", ("Master 2ème année")),
    ("6", ("Doctorat"))

)

# Liste des langues proposées lors de l'ajout des vidéos. Affichés en dessous d'une vidéos, ils sont aussi utilisés pour affiner la recherche.
#LANG_CHOICES = ( settings.PREF_LANG_CHOICES + (('', '----------'),) + settings.ALL_LANG_CHOICES )

# Répertoire par défaut pour le téléversement des vidéos.
VIDEOS_DIR = "videos"

# Fonction appelée pour lancer l'encodage des vidéos
# Pour l'encodage distant, il faut préciser "start_remote_encode"
{% if install_remote == false  %}
ENCODE_VIDEO = "start_encode"
{% endif %}

{% if install_remote == true  %}
ENCODE_VIDEO = "start_remote_encode"

SSH_REMOTE_USER = "{{ remote_user }}"
SSH_REMOTE_HOST = "{{ remote_host}}"
SSH_REMOTE_KEY = "{{ remote_key }}"
SSH_REMOTE_CMD ="{{ remote_cmd }}"

{% endif %}



VIDEO_ALLOWED_EXTENSIONS = ( '3gp', 'avi', 'divx', 'flv', 'm2p', 'm4v', 'mkv', 'mov', 'mp4', 'mpeg', 'mpg', 'mts', 'wmv', 'mp3', 'ogg', 'wav', 'wma', 'webm' )

VIDEO_MAX_UPLOAD_SIZE = {{ video_max_upload_size }}

VIDEO_FORM_FIELDS_HELP_TEXT = ""

# Liste des champs du formulaire d'édition de vidéos affichés
#VIDEO_FORM_FIELDS = __all__

CHANNEL_FORM_FIELDS_HELP_TEXT = ""

THEME_FORM_FIELDS_HELP_TEXT = ""

# Configuration application recorder (enregistreur)

{% if install_ftp == true  %}

# Recorder settings
#
ALLOW_MANUAL_RECORDING_CLAIMING = True
ALLOW_RECORDER_MANAGER_CHOICE_VID_OWNER = True
DEFAULT_RECORDER_ID = 1
DEFAULT_RECORDER_PATH = '{{ ftp_path }}'
DEFAULT_RECORDER_TYPE_ID = 2
#DEFAULT_RECORDER_USER_ID = 1 #pour que 'admin puisse revendiquer la video
RECORDER_SKIP_FIRST_IMAGE = False
RECORDER_TYPE =(('video', ('Video')), ('audiovideocast', ('Audiovideocast')),  ('studio', _('Studio')))
USE_RECORD_PREVIEW = False
PUBLIC_RECORD_DIR = 'records'
SELF_REQUESTS_PROXIES = { "http": None, "https": None}
ALLOW_INSECURE_REQUESTS = True
# Précise les proxy à utiliser pour une requête vers l'application elle même, par défaut force la non utilisation de proxy
SELF_REQUESTS_PROXIES = { "http": None, "https": None}
RECORDER_ADDITIONAL_FIELDS = ('additional_users', 'is_draft', 'password',
                              'is_restricted', 'restrict_access_to_groups',
                              'cursus', 'main_lang', 'tags', 'discipline',
                              'licence', 'channel', 'theme', 'transcript'
                              'allow_downloading', 'is_360', 'disable_comment')

{% endif %}


#FILE_ALLOWED_EXTENSIONS = {{ file_allowed_ext }}
FILE_ALLOWED_EXTENSIONS = ('doc', 'docx', 'odt', 'pdf', 'xls', 'xlsx', 'ods',
                           'ppt', 'pptx', 'txt', 'html', 'htm', 'vtt', 'srt',
                           'webm', 'ts')

#IMAGE_ALLOWED_EXTENSIONS = {{ image_allowed_ext }}
IMAGE_ALLOWED_EXTENSIONS = ('jpg', 'jpeg', 'bmp', 'png', 'gif', 'tiff')

FILE_MAX_UPLOAD_SIZE = {{ file_max_upload_size }}


ROLE_CHOICES = (
    ('actor', ('actor')),
    ('author', ('author')),
    ('designer', ('designer')),
    ('consultant', ('consultant')),
    ('contributor', ('contributor')),
    ('editor', ('editor')),
    ('speaker', ('speaker')),
    ('soundman', ('soundman')),
    ('director', ('director')),
    ('writer', ('writer')),
    ('technician', ('technician')),
    ('voice-over', ('voice-over')),
)


KIND_CHOICES = ( ('subtitles', ('subtitles')), ('captions', ('captions')), )


#ldap
# Type d'authentification possible sur votre instance. Pour l'instant local ou cas
AUTH_TYPE = (('local', _('local')), ('CAS', 'CAS'))
USE_CAS = {{ settings_use_cas }}
CAS_SERVER_URL = '{{ cas_url }}'

CAS_GATEWAY = {{ cas_gateway }}

POPULATE_USER = '{{ populate }}'

AUTH_LDAP_USER_SEARCH = {{ ldap_user_search }}

CREATE_GROUP_FOM_AFFILIATION = False

LDAP_SERVER = {'url': '{{ ldap_serveur }}', 'port': {{ldap_port}}, 'use_ssl': {{ldap_ssl}}}

AFFILIATION = (
    ('student', _('student')),
    ('faculty', _('faculty')),
    ('staff', _('staff')),
    ('employee', _('employee')),
    ('member', _('member')),
    ('affiliate', _('affiliate')),
    ('alum', _('alum')),
    ('library-walk-in', _('library-walk-in')),
    ('researcher', _('researcher')),
    ('retired', _('retired')),
    ('emeritus', _('emeritus')),
    ('teacher', _('teacher')),
    ('registered-reader', _('registered-reader'))
)



AFFILIATION_STAFF = ('faculty', 'employee', 'staff')

USER_LDAP_MAPPING_ATTRIBUTES = {
    "uid": "uid",
    "mail": "mail",
    "last_name": "sn",
    "first_name": "givenname",
    "primaryAffiliation": "eduPersonPrimaryAffiliation",
    "affiliations": "eduPersonAffiliation",
    "groups": "memberOf"
}

AUTH_LDAP_BASE_DN ='{{ base_dn }}'
# Identifiant (DN) du compte pour se connecter au serveur LDAP
AUTH_LDAP_BIND_DN = '{{ bind_dn }}'
AUTH_LDAP_BIND_PASSWORD = '{{ bind_pwd }}'


# Utiliser l'authentification Shibboleth

USE_SHIB = False
SHIB_NAME = ""
SHIBBOLETH_ATTRIBUTE_MAP = {
    "shib-user": (True, "username"),
    "shib-given-name": (True, "first_name"),
    "shib-sn": (True, "last_name"),
    "shib-mail": (False, "email"),
}
# Nom de l'attribut dans les headers qui sert à identifier l'utilisateur connecté avec Shibboleth
REMOTE_USER_HEADER = 'REMOTE_USER'
# URL de connexion à votre instance Shibboleth
SHIB_URL = ""
# URL de déconnexion à votre instance Shibboleth
SHIB_LOGOUT_URL = ""
# Forcer le passage en minuscule du nom d'utilisateur CAS (permet de prévenir des doubles créations de comptes dans certain cas).
CAS_FORCE_LOWERCASE_USERNAME = True



# permettre l'usage du oembed, partage dans moodle, facebook, twitter etc.
OEMBED = True

# Activer les commentaires au niveau de la plateforme
ACTIVE_VIDEO_COMMENT = True

# Transcription
USE_TRANSCRIPTION = False

AUDIO_SPLIT_TIME = 300

VIEWERS_ONLY_FOR_STAFF = False

HEARTBEAT_DELAY = 45

# Délai (en seconde) selon lequel une vue est considérée comme expirée si elle n'as pas renvoyé de signal depuis
VIEW_EXPIRATION_DELAY = 60

# Utilisation de BigBlueButton
USE_BBB = {{ use_bbb }}

DEFAULT_BBB_PLUGIN = '{{ default_bbb_plugin_root }}/{{ bbb_plugin_directory }}'
DEFAULT_BBB_PATH = '{{ default_bbb_path }}'
BBB_SERVER_URL = '{{ bbb_server_url }}'
BBB_SECRET_KEY = '{{ bbb_secret_key }}'
DEFAULT_BBB_TYPE_ID = {{ default_bbb_type_id }}
BBB_USERNAME_FORMAT = 'first_name last_name'
BBB_NUMBER_DAYS_BEFORE_DELETE = {{ bbb_days_delete }}

#celery
CELERY_NAME = "pod_project"
CELERY_BACKEND = "amqp"
CELERY_TO_ENCODE = {{ settings_enable_celery }}

CELERY_BROKER_URL = "amqp://{{ hostvars[groups['rabbitmq'][0]].rabbitmq_user}}:{{ hostvars[groups['rabbitmq'][0]].rabbitmq_password}}@{{ rabbitmq_ip }}/{{ hostvars[groups['rabbitmq'][0]].rabbitmq_vhost }}"


BASE_DIR = '{{ django_path }}/pod'
FROM_URL = '{{ from_url }}'

BASE_URL = 'https://{{ pod_host }}'

MODELTRANSLATION_FALLBACK_LANGUAGES = ('fr', 'en')

# Permet d'activer le fonctionnement de categorie au niveau de ses vidéos
# Vous pouvez créer des catégories pour pouvoir ranger vos propres vidéos
# Les catégories sont liées à l'utilisateur

USER_VIDEO_CATEGORY = True


# gestion de l'oboslesence des vidéos

USE_OBSOLESCENCE = True

WARN_DEADLINES = [60, 30, 7]

POD_ARCHIVE_AFFILIATION = ['faculty',
                           'staff',
                           'employee',
                           'affiliate',
                           'alum',
                           'library-walk-in',
                           'researcher',
                           'retired',
                           'emeritus',
                           'teacher',
                           'registered-reader',
                           'member']

ACCOMMODATION_YEARS={'faculty': 5, 'employee': 5, 'staff': 5, 'student': 2}

DEFAULT_YEAR_DATE_DELETE = 5

ARCHIVE_OWNER_USERNAME = 'dnum-archives-pod'

# Configuration / Activtion du LTI
# voir pod/main/settings.py L.224

LTI_ENABLED = True # False par défaut

USE_TZ = False


"""
# Ce paramètre permet d'activer l'envoi d'évènements sur le lecteur vidéo à Matomo
# n'est utile que si le code piwik / matomo est présent dans l'instance de Esup-Pod
# les évènements envoyés sont : play, pause, seeked, ended, ratechange, fullscreen, error, loadmetadata
# Pour rajouter le code Piwik/Matomo dans votre instance de Pod, il suffit de créer un fichier
# 'pod/custom/templates/custom/tracking.html' et d'y insérer le code javascript
# puis dans votre fichier settings_local.py, de préciser dans la variable TEMPLATE_VISIBLE_SETTINGS
#     'TRACKING_TEMPLATE': 'custom/tracking.html',
"""
USE_VIDEO_EVENT_TRACKING = False

VIDEO_PLAYBACKRATES = '[0.5, 1, 1.5, 2]'

SESSION_COOKIE_SAMESITE_FORCE_ALL = False

SESSION_COOKIE_SAMESITE = 'Lax'

VIDEO_REQUIRED_FIELDS = []

DARKMODE_ENABLED = False

DYSLEXIAMODE_ENABLED =  False

COOKIE_LEARN_MORE = ""


